DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001775
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@78782dc6] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@78782dc6]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 16
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@78782dc6]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:17, id=16, author=null, createdAt=2010-09-28 21:56:17, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@78782dc6] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001779
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@7488485f] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7488485f]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 17
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7488485f]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:17, id=17, author=null, createdAt=2010-09-28 21:56:17, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7488485f] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001782
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@7e54864c] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e54864c]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 18
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e54864c]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:18, id=18, author=null, createdAt=2010-09-28 21:56:18, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e54864c] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001785
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@64125b4d] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@64125b4d]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 19
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@64125b4d]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:18, id=19, author=null, createdAt=2010-09-28 21:56:18, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@64125b4d] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001788
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@48412739] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@48412739]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 20
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@48412739]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:18, id=20, author=null, createdAt=2010-09-28 21:56:18, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@48412739] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001792
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@36a11e4] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36a11e4]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 21
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36a11e4]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:19, id=21, author=null, createdAt=2010-09-28 21:56:19, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@36a11e4] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001795
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@3da5f0f3] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3da5f0f3]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 22
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3da5f0f3]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:19, id=22, author=null, createdAt=2010-09-28 21:56:19, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@3da5f0f3] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001798
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@69e0312b] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@69e0312b]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 23
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@69e0312b]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:19, id=23, author=null, createdAt=2010-09-28 21:56:19, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@69e0312b] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001802
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@724eda4a] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@724eda4a]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 24
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@724eda4a]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:20, id=24, author=null, createdAt=2010-09-28 21:56:20, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@724eda4a] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001805
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@502a5a5e] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@502a5a5e]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 25
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@502a5a5e]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:20, id=25, author=null, createdAt=2010-09-28 21:56:20, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@502a5a5e] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001808
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@1b1fb141] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1b1fb141]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 26
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1b1fb141]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:20, id=26, author=null, createdAt=2010-09-28 21:56:20, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@1b1fb141] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001812
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@574a3347] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@574a3347]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 27
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@574a3347]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:21, id=27, author=null, createdAt=2010-09-28 21:56:21, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@574a3347] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing POST request for [/spring3-storage-unit/integration/link]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/link] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Reading [java.lang.String] as "application/xml" using [org.springframework.http.converter.StringHttpMessageConverter@75dfb148]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.addLink(java.lang.String) throws java.io.IOException
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.addLink]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001815
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@4a578fd6] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4a578fd6]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.event.def.AbstractSaveEventListener - executing identity-insert immediately
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - insert into spring3_linkstorage_unit.links (author_id, url, meta_description, updated_at, created_at) values (?, ?, ?, ?, ?)
DEBUG btpool0-0 org.hibernate.id.IdentifierGeneratorFactory - Natively generated identity: 28
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4a578fd6]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:21, id=28, author=null, createdAt=2010-09-28 21:56:21, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@4a578fd6] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' determining Last-Modified value for [/spring3-storage-unit/integration/links]
DEBUG btpool0-0 org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping - Mapping [/integration/links] to handler 'org.linkstorage.controller.LinkController@551ee3'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Last-Modified value for [/spring3-storage-unit/integration/links] is: -1
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - DispatcherServlet with name 'integration' processing GET request for [/spring3-storage-unit/integration/links]
DEBUG btpool0-0 org.springframework.web.bind.annotation.support.HandlerMethodInvoker - Invoking request handler method: public org.springframework.web.servlet.ModelAndView org.linkstorage.controller.LinkController.getLinks()
DEBUG btpool0-0 org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'getLinks' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Creating new transaction with name [org.linkstorage.repository.HibernateLinkBase.getLinks]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG btpool0-0 org.hibernate.impl.SessionImpl - opened session at timestamp: 12857001857
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Opened new Session [org.hibernate.impl.SessionImpl@530a3ffc] for Hibernate transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@530a3ffc]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - begin
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - opening JDBC connection
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - current autocommit status: true
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - disabling autocommit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/spring3_linkstorage_unit, UserName=root@localhost, MySQL-AB JDBC Driver]
DEBUG btpool0-0 org.hibernate.hql.ast.QueryTranslatorImpl - parse() - HQL: from org.linkstorage.model.Link l
DEBUG btpool0-0 org.hibernate.hql.ast.AST - --- HQL AST ---
 \-[QUERY] 'query'
    \-[SELECT_FROM] 'SELECT_FROM'
       \-[FROM] 'from'
          \-[RANGE] 'RANGE'
             +-[DOT] '.'
             |  +-[DOT] '.'
             |  |  +-[DOT] '.'
             |  |  |  +-[IDENT] 'org'
             |  |  |  \-[IDENT] 'linkstorage'
             |  |  \-[IDENT] 'model'
             |  \-[IDENT] 'Link'
             \-[ALIAS] 'l'

DEBUG btpool0-0 org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
DEBUG btpool0-0 org.hibernate.hql.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG btpool0-0 org.hibernate.hql.ast.tree.FromElement - FromClause{level=1} :  org.linkstorage.model.Link (l) -> link0_
DEBUG btpool0-0 org.hibernate.hql.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG btpool0-0 org.hibernate.hql.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} spring3_linkstorage_unit.links link0_ ) )
DEBUG btpool0-0 org.hibernate.hql.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG btpool0-0 org.hibernate.hql.ast.util.JoinProcessor - Using FROM fragment [spring3_linkstorage_unit.links link0_]
DEBUG btpool0-0 org.hibernate.hql.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG btpool0-0 org.hibernate.hql.ast.AST - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (spring3_linkstorage_unit.links)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'link0_.id as id1_'
    |  \-[SQL_TOKEN] SqlFragment: 'link0_.author_id as author2_1_, link0_.url as url1_, link0_.meta_description as meta4_1_, link0_.updated_at as updated5_1_, link0_.created_at as created6_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[l], fromElementByTableAlias=[link0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'spring3_linkstorage_unit.links link0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=l,role=null,tableName=spring3_linkstorage_unit.links,tableAlias=link0_,origin=null,colums={,className=org.linkstorage.model.Link}}

DEBUG btpool0-0 org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
DEBUG btpool0-0 org.hibernate.hql.ast.QueryTranslatorImpl - HQL: from org.linkstorage.model.Link l
DEBUG btpool0-0 org.hibernate.hql.ast.QueryTranslatorImpl - SQL: select link0_.id as id1_, link0_.author_id as author2_1_, link0_.url as url1_, link0_.meta_description as meta4_1_, link0_.updated_at as updated5_1_, link0_.created_at as created6_1_ from spring3_linkstorage_unit.links link0_
DEBUG btpool0-0 org.hibernate.hql.ast.ErrorCounter - throwQueryException() : no errors
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open PreparedStatement (open PreparedStatements: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.SQL - select link0_.id as id1_, link0_.author_id as author2_1_, link0_.url as url1_, link0_.meta_description as meta4_1_, link0_.updated_at as updated5_1_, link0_.created_at as created6_1_ from spring3_linkstorage_unit.links link0_
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to open ResultSet (open ResultSets: 0, globally: 0)
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#1]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#2]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#5]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#8]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#9]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#10]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#11]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#12]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#13]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#14]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#15]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#16]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#17]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#18]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#19]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#20]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#21]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#22]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#23]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#24]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#25]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#26]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#27]
DEBUG btpool0-0 org.hibernate.loader.Loader - result row: EntityKey[org.linkstorage.model.Link#28]
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close ResultSet (open ResultSets: 1, globally: 1)
DEBUG btpool0-0 org.hibernate.jdbc.AbstractBatcher - about to close PreparedStatement (open PreparedStatements: 1, globally: 1)
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#1]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#1]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#2]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#2]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#5]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#5]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#8]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#8]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#9]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#9]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#10]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#10]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#11]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#11]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#12]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#12]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#13]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#13]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#14]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#14]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#15]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#15]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#16]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#16]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#17]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#17]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#18]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#18]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#19]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#19]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#20]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#20]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#21]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#21]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#22]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#22]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#23]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#23]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#24]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#24]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#25]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#25]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#26]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#26]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#27]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#27]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - resolving associations for [org.linkstorage.model.Link#28]
DEBUG btpool0-0 org.hibernate.engine.TwoPhaseLoad - done materializing entity [org.linkstorage.model.Link#28]
DEBUG btpool0-0 org.hibernate.engine.StatefulPersistenceContext - initializing non-lazy collections
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Initiating transaction commit
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@530a3ffc]
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - commit
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - processing flush-time cascades
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - dirty checking collections
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 24 objects
DEBUG btpool0-0 org.hibernate.event.def.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG btpool0-0 org.hibernate.pretty.Printer - listing entities:
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:29:09, id=5, author=null, createdAt=2010-09-28 21:29:09, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:55:51, id=8, author=null, createdAt=2010-09-28 21:55:51, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-26 09:10:00, id=2, author=null, createdAt=2010-09-26 09:10:00, metaDescription=Search engine, url=http://www.google.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-25 09:10:00, id=1, author=null, createdAt=2010-09-25 09:10:00, metaDescription=Bg portal, url=http://www.dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:21, id=28, author=null, createdAt=2010-09-28 21:56:21, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:21, id=27, author=null, createdAt=2010-09-28 21:56:21, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:20, id=26, author=null, createdAt=2010-09-28 21:56:20, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:20, id=25, author=null, createdAt=2010-09-28 21:56:20, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:19, id=23, author=null, createdAt=2010-09-28 21:56:19, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:20, id=24, author=null, createdAt=2010-09-28 21:56:20, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:19, id=21, author=null, createdAt=2010-09-28 21:56:19, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:19, id=22, author=null, createdAt=2010-09-28 21:56:19, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:18, id=19, author=null, createdAt=2010-09-28 21:56:18, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:18, id=20, author=null, createdAt=2010-09-28 21:56:18, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:17, id=17, author=null, createdAt=2010-09-28 21:56:17, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:18, id=18, author=null, createdAt=2010-09-28 21:56:18, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:17, id=15, author=null, createdAt=2010-09-28 21:56:17, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:17, id=16, author=null, createdAt=2010-09-28 21:56:17, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:15, id=13, author=null, createdAt=2010-09-28 21:56:15, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:16, id=14, author=null, createdAt=2010-09-28 21:56:16, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - org.linkstorage.model.Link{updatedAt=2010-09-28 21:56:07, id=11, author=null, createdAt=2010-09-28 21:56:07, metaDescription=Meta description, url=http://dir.bg}
DEBUG btpool0-0 org.hibernate.pretty.Printer - more......
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - re-enabling autocommit
DEBUG btpool0-0 org.hibernate.transaction.JDBCTransaction - committed JDBC Connection
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.orm.hibernate3.HibernateTransactionManager - Closing Hibernate Session [org.hibernate.impl.SessionImpl@530a3ffc] after transaction
DEBUG btpool0-0 org.springframework.orm.hibernate3.SessionFactoryUtils - Closing Hibernate Session
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - releasing JDBC connection [ (open PreparedStatements: 0, globally: 0) (open ResultSets: 0, globally: 0)]
DEBUG btpool0-0 org.hibernate.jdbc.ConnectionManager - transaction completed on session with on_close connection release mode; be sure to close the session to release JDBC resources!
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Requested media types are [*/*] (based on Accept header)
DEBUG btpool0-0 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'links'
DEBUG btpool0-0 org.springframework.web.servlet.view.ContentNegotiatingViewResolver - Returning [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] based on requested media type '*/*'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Rendering view [org.springframework.web.servlet.view.xml.MarshallingView: name 'links'] in DispatcherServlet with name 'integration'
DEBUG btpool0-0 org.springframework.web.servlet.DispatcherServlet - Successfully completed request
INFO Shutdown org.springframework.web.context.support.XmlWebApplicationContext - Closing WebApplicationContext for namespace 'integration-servlet': startup date [Tue Sep 28 21:55:46 EEST 2010]; parent: Root WebApplicationContext
DEBUG Shutdown org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
INFO Shutdown org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@154ab8e4: defining beans [linkController,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.web.servlet.config.viewControllerHandlerAdapter,org.springframework.web.servlet.config.viewControllerHandlerMapping,org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping#0,org.springframework.format.support.FormattingConversionServiceFactoryBean#0,org.springframework.validation.beanvalidation.LocalValidatorFactoryBean#0,org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter#0,org.springframework.web.servlet.handler.MappedInterceptor#0,org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping#1,org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter#1,jaxbMarshaller,links,org.springframework.web.servlet.view.ContentNegotiatingViewResolver#0]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@4defb0be
DEBUG Shutdown org.springframework.beans.factory.support.DefaultListableBeanFactory - Retrieved dependent beans for bean 'org.springframework.web.servlet.view.BeanNameViewResolver#130a7be0': [org.springframework.web.servlet.view.ContentNegotiatingViewResolver#0]
DEBUG Shutdown org.springframework.beans.factory.support.DefaultListableBeanFactory - Retrieved dependent beans for bean '(inner bean)#2': [org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter#0]
DEBUG Shutdown org.springframework.beans.factory.support.DefaultListableBeanFactory - Retrieved dependent beans for bean '(inner bean)': [org.springframework.web.servlet.config.viewControllerHandlerMapping]
DEBUG Shutdown org.springframework.beans.factory.support.DefaultListableBeanFactory - Retrieved dependent beans for bean '(inner bean)#1': [org.springframework.web.servlet.handler.MappedInterceptor#0]
INFO Shutdown org.springframework.web.context.support.XmlWebApplicationContext - Closing Root WebApplicationContext: startup date [Tue Sep 28 21:55:45 EEST 2010]; root of context hierarchy
DEBUG Shutdown org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
INFO Shutdown org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4defb0be: defining beans [loggingAspect,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.config.internalTransactionAspect,sessionFactory,org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,dataSource,transactionManager,repository.links]; root of factory hierarchy
DEBUG Shutdown org.springframework.beans.factory.support.DisposableBeanAdapter - Invoking destroy() on bean with name 'sessionFactory'
INFO Shutdown org.springframework.orm.hibernate3.LocalSessionFactoryBean - Closing Hibernate SessionFactory
INFO Shutdown org.hibernate.impl.SessionFactoryImpl - closing
